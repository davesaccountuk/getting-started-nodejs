#box: node:4.2.6-slim
box: node

#dev:
#  steps:
#    - npm-install
#    - internal/watch:
#        code: node app.js
#        reload: true
#a comment

# Build definition

build:
  # The steps that will be executed on build
  steps:
    - script:
        code: export NODE_ENV='testing'
    # A step that executes `npm install` command
    - npm-install
    # A step that executes `npm test` command
    - npm-test
    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: echo nodejs information
        code: |
          echo "In the build phase --- whooop"
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"

push-to-bluemix:
  steps:
    - script:
        name: Initialize jq and cf
        code: |
          cd /
          wget -O cf.tgz https://cli.run.pivotal.io/stable?release=linux64-binary && tar -xvf cf.tgz && rm cf.tgz
          wget -O jq http://stedolan.github.io/jq/download/linux64/jq
          chmod +x cf jq
          set -x
          ./cf login -a $CF_API -u $CF_USER -p $CF_PASS -o $CF_ORG -s $CF_SPACE
          BASETOKEN=$(./jq -r '.AccessToken' ~/.cf/config.json | cut -d ' ' -f 2)
          SPACE=$(./jq -r '.OrganizationFields.GUID' ~/.cf/config.json)
          export TOKEN="$BASETOKEN|$SPACE"
          echo $TOKEN 
    - internal/docker-push:
        registry: https://registry.eu-gb.bluemix.net/v2
        repository: registry.eu-gb.bluemix.net/aie_london/$CONTAINER_NAME
        username: bearer
        password: $TOKEN
#        ports: $CF_PORT 
        #cmd: /bin/bash -c "cd /pipeline/source && python app.py"
       # cmd: $LAUNCH_CMD

dev:
    box: casey232/cf-bluemix-ci
#    steps:
#      - script:
#         name: Test Bluemix
#         code: chmod +x ./bluemix.sh && ./bluemix.sh
          
